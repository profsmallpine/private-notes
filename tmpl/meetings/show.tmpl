{{ define "pageContent" }}
<div class="relative py-16 overflow-hidden">
  <div class="relative px-4 sm:px-6 lg:px-8">
    <div class="text-lg max-w-prose mx-auto mb-6">
      <p class="text-base text-center leading-6 text-indigo-600 font-semibold tracking-wide uppercase">{{ .Data.group.Name }} Meeting On</p>
      <h1 class="mt-2 mb-8 text-3xl text-center leading-8 font-extrabold tracking-tight text-gray-900 sm:text-4xl sm:leading-10">
        {{ .Data.meeting.CreatedAtHumanized }}
      </h1>
      {{ if and .Data.currentUser.IsAdmin (not .Data.meeting.IsComplete) }}
      <button 
        type="button" 
        class="rounded-md border border-transparent bg-red-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 w-full text-center"
        onclick="Turbo.visit('/groups/{{ .Data.meeting.GroupID }}/meetings/{{ .Data.meeting.ID }}/update')">Complete Meeting</button>
      {{ end }}

      <div class="mt-16">
        <turbo-frame id="goals">
          {{ range .Data.meeting.Goals }}
          {{ template "goal" . }}
          {{ end }}
        </turbo-frame>

        {{ if not .Data.meeting.IsComplete }}
        <turbo-frame id="new-goal">
          <form 
            action="/groups/{{ .Data.meeting.GroupID }}/meetings/{{ .Data.meeting.ID }}/goals/create" 
            method="POST"
            data-controller="reset-form"
            data-action="turbo:submit-end->reset-form#reset"
          >
            <div class="space-y-6">
              <div class="space-y-1">
                <div class="rounded-md shadow-sm">
                  <textarea id="content" name="content" rows="3" class="shadow-sm block w-full focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm border border-gray-300 rounded-md" placeholder="Add a goal!" required></textarea>
                </div>

                <select id="mood" name="mood" class="mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" required>
                  <option value="" disabled selected>Select a mood</option>
                  {{ range .Data.moods }}
                  <option value="{{ . }}">{{ . }}</option>
                  {{ end }}
                </select>

                <select id="style" name="style" class="mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" required>
                  <option value="" disabled selected>Select a style</option>
                  {{ range .Data.styles }}
                  <option value="{{ . }}">{{ . }}</option>
                  {{ end }}
                </select>
              </div>

              <div class="flex justify-end">
                <span class="ml-3 inline-flex rounded-md shadow-sm">
                  <button type="submit" class="relative inline-flex items-center px-4 py-2 border border-transparent text-sm leading-5 font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-500 focus:outline-none focus:shadow-outline-indigo focus:border-indigo-700 active:bg-indigo-700">
                    Submit
                  </button>
                </span>
              </div>
            </div>
          </form>
        </turbo-frame> 
        {{ end }}
      </div>
    </div>
  </div>
</div>
{{ end }}

{{ define "scripts" }}
<script type="text/javascript">
  Stimulus.Application.start().register("reset-form", class extends Stimulus.Controller {
    reset() {
      this.element.reset()
    }
  })

  Turbo.connectStreamSource(new WebSocket(`ws:\/\/${window.location.host}\/ws`));
</script>
{{ end }}
